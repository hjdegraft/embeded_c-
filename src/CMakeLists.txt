cmake_minimum_required (VERSION 2.8.10.2)
project(ledcontrol)

find_package(densityd REQUIRED)
include_directories(BEFORE ${CMAKE_INCLUDE_PATH})
link_directories(BEFORE ${CMAKE_LIBRARY_PATH})

if(NOT DEFINED CMAKE_BUILD_TYPE)
set(CMAKE_BUILD_TYPE )
endif(NOT DEFINED CMAKE_BUILD_TYPE)

if(APPLE)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -std=c++14")
set(CMAKE_CXX_FLAGS_DEBUG   "-O0 -g -std=c++14")
set(CMAKE_C_FLAGS_RELEASE   "-O3 -std=c11")
set(CMAKE_C_FLAGS_DEBUG     "-O0 -g -std=c11")
else(APPLE)
set(CMAKE_CXX_FLAGS_RELEASE "-O3 -std=c++11")
set(CMAKE_CXX_FLAGS_DEBUG   "-O0 -ggdb -g3 -std=c++11")
set(CMAKE_C_FLAGS_RELEASE   "-O3 -std=c11")
set(CMAKE_C_FLAGS_DEBUG     "-O0 -ggdb -g3 -std=c11")
endif(APPLE)

set(LEDCONTROL_SOURCE_FILES  led_service_module.cpp ledcontrol.cpp led_service_util.cpp)
set(LEDCONTROL_HEADERS ledhal.h led_service_module.h led_service_defines.h ledcontrol.h)
set(LEDCONTROL_PUBLIC_HEADERS ledhal.h led_service_module.h led_service_defines.h ledcontrol.h)

add_library(ledcontrol STATIC ${LEDCONTROL_SOURCE_FILES} ${LEDCONTROL_HEADERS} )
add_executable(ledcontrold led_service_util.cpp)
#target_link_libraries(ledcontrold docopt ledcontrol  czmq zmq pthread)
target_link_libraries(ledcontrold ledcontrol DENSITYD::densityd)
#target_link_libraries(ledcontrold ledcontrol)
install(TARGETS ledcontrol DESTINATION lib)
install(TARGETS ledcontrold DESTINATION bin)
install(FILES ${LEDCONTROL_PUBLIC_HEADERS} DESTINATION include/ledcontrol)
